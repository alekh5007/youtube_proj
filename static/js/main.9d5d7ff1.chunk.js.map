{"version":3,"sources":["component/Footer.js","component/Home.js","component/Course.js","component/Allcourses.js","component/AddCourses.js","component/Header.js","component/Menu.js","component/Contact.js","component/About.js","component/Covid.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","style","display","alignItems","Home","Jumbotron","Course","course","useState","cpic","setCpic","localStorage","getItem","useEffect","axios","get","then","response","data","graphql","user","edge_owner_to_timeline_media","edges","error","console","log","Row","map","itemsss","Col","sm","alt","height","width","src","node","display_url","Allcourses","name","count","setCount","post","setPost","courses","setCourses","value","toast","success","edge_followed_by","warning","username","md","borderRadius","marginLeft","profile_pic_url_hd","full_name","AddCourses","state","setItem","this","warn","props","history","push","type","placeholder","onChange","event","setState","target","onClick","login","Component","Header","Card","color","CardBody","Menu","ListGroup","tag","to","action","Contact","icon","faPhoneAlt","faCoffee","faHeart","About","href","Covid","cdata","setCdata","Countries","Container","Table","dark","item","i","Country","TotalConfirmed","TotalRecovered","TotalDeaths","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9d5d7ff1.chunk.js","sourcesContent":["import React from'react'\r\nimport { Container } from 'reactstrap'\r\n\r\nfunction Footer(){\r\n    return(\r\n        <div className=\"container text-center py-5\">\r\n            \r\n               \r\n                <span style={{ display:'inline-flex', alignItems: 'center' }} className=\"text-center my-3\"> Copyright Â© 2020 All rights reserved.</span>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import React from'react';\r\nimport { Jumbotron ,Button,Container} from 'reactstrap';\r\nimport Footer from'./Footer'\r\nfunction Home(){\r\n\r\n    return(\r\n        <div>\r\n        <Jumbotron className=\"text-center\">\r\n            <h1 >Home  </h1>\r\n            <br/>\r\n            <p>This is a simple React web app, make up with the  help of covid api & instagram api .Displaying the number of covid cases around the world and also displaying instagram details of user with the recent profile pic .</p>\r\n          {/* <Container>\r\n              <Button color=\"primary\">click me</Button>\r\n          </Container> */}\r\n          \r\n            </Jumbotron>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card, CardBody,  CardText,Button,Container,Col,\r\n  CardSubtitle,\r\n  Row\r\n} from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport Footer from'./Footer'\r\n\r\nfunction Course({ course }) {\r\n  //console.warn(\"coooollll\",course)\r\n  const [cpic, setCpic] = useState([]);\r\n  const value = localStorage.getItem('username')\r\n  const getallapidata = () => {\r\n\r\n    axios.get('https://www.instagram.com/' + course + '/?__a=1').then(\r\n        (response) => {\r\n            //console.log(response.data.graphql.user.edge_owner_to_timeline_media.edges);\r\n          \r\n            setCpic(response.data.graphql.user.edge_owner_to_timeline_media.edges);\r\n        },\r\n\r\n        (error) => {\r\n            console.log(error)\r\n            //toast.warning(\"something went wrong\");\r\n        }\r\n    )\r\n}\r\n\r\n//calling load fn\r\nuseEffect(() => {\r\n    getallapidata();\r\n}, [])\r\n  return (\r\n\r\n\r\n    <Row>\r\n     <hr /> \r\n  \r\n\r\n      \r\n{\r\n  cpic.map((itemsss)=>\r\n  <Col sm={4} >\r\n        <br/>\r\n  <img   className=\"py-3\" alt=\"Card image\" style={{height:300, width:300}} src={itemsss.node.display_url} />\r\n  </Col>\r\n  )\r\n}\r\n<Footer/>\r\n    </Row>\r\n\r\n  );\r\n}\r\n\r\nexport default Course;","import React, { useState, useEffect } from 'react';\r\nimport Course from './Course'\r\nimport {\r\n    Col\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Row } from 'reactstrap';\r\n\r\nfunction Allcourses({ name }) {\r\n    console.log(name)\r\n    const [cname, setCname] = useState();\r\n    const [count, setCount] = useState();\r\n    const [post, setPost] = useState();\r\n    const [courses, setCourses] = useState([\r\n        // {title:\"python\",description:\"this is my first tutorials\"},\r\n        // {title:\"java\",description:\"this is my first tutorials\"},\r\n    ])\r\n    const value = localStorage.getItem('username')\r\n    //function to call server\r\n    const getallapidata = () => {\r\n\r\n        axios.get('https://www.instagram.com/' + value + '/?__a=1').then(\r\n            (response) => {\r\n                //console.log(response.data.graphql.user);\r\n                toast.success(\"sucess\");\r\n                //setCourses(response.data.graphql.user.edge_followed_by.count);\r\n                setCourses(response.data.graphql.user);\r\n                setCount(response.data.graphql.user.edge_followed_by.count);\r\n                setPost(response.data.graphql.user.edge_owner_to_timeline_media.count);\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error)\r\n                toast.warning(\" invalid username or account is private\");\r\n            }\r\n        )\r\n    }\r\n\r\n    //calling load fn\r\n    useEffect(() => {\r\n        getallapidata();\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n            <h1 className=\"text-center my-3\">{courses.username}</h1>\r\n\r\n            <Row className=\"py-5\">\r\n                <Col md={4}>\r\n                    <img alt=\"Card image\" style={{ height: 200, width: 200, borderRadius: 90, marginLeft: 8, }} src={courses.profile_pic_url_hd} />\r\n                    <h1>{courses.full_name}</h1>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                  \r\n                    <h1 className=\"py-4\">{post} Posts</h1>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <h1 className=\"py-4\">{count} Followers</h1>\r\n                </Col>\r\n\r\n           \r\n\r\n            <Course course={value} />\r\n\r\n            </Row>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Allcourses;","import React, { Component } from 'react'\r\nimport { Form, FormGroup, Label, Input, Container, Button } from 'reactstrap'\r\nimport Footer from'./Footer'\r\n\r\nexport default class AddCourses extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    login() {\r\n        // alert(\"gggggg\",this.state.name)\r\n        localStorage.setItem('username', this.state.name);\r\n\r\n        //console.warn(this.state.name)\r\n        console.warn(this.props.history.push('all-courses'))\r\n        // <Link to={\"/Allcourses/\"+key}><FontAwesomeIcon icon={faEdit}/></Link>\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src=\"https://i.imgur.com/zqpwkLQ.png\" className=\"center\" />\r\n                <br />\r\n                <center>\r\n                <input type=\"text\"\r\n                    placeholder=\"enter username\"\r\n                    name=\"user\" onChange={(event) => this.setState({ name: event.target.value })} /><br /><br />\r\n              \r\n                <button onClick={() => { this.login() }}>submit</button>\r\n                </center>\r\n                <br/><br/>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// render() {\r\n//     return(\r\n//         <div>\r\n//            <img src=\"https://i.imgur.com/zqpwkLQ.png\" className=\"center\"/>\r\n//    <br/>\r\n//             <Form>\r\n//                 <FormGroup>\r\n//                 {/* <Label for=\"courseid\">Courseid</Label> */}\r\n//         <Input type=\"text\" name=\"username\"  placeholder=\"insta username\" />\r\n//      </FormGroup>\r\n\r\n//                 <FormGroup>\r\n//                     <Container className=\"text-center\">\r\n//                             <button color=\"primary\" onClick={()=>{create()}}>Add Restaurant</button>\r\n//                     </Container>\r\n//                 </FormGroup>\r\n//             </Form>\r\n//         </div>\r\n//     )\r\n//  }","import React from'react';\r\nimport { Container, Card, CardBody } from 'reactstrap';\r\n\r\nfunction Header(){\r\n    return(\r\n        \r\n        <Card color=\"info\" className=\"my-2\">\r\n            <CardBody>\r\n            <h1 className=\"text-center my-3\">Instagram & Covid</h1>\r\n            </CardBody>\r\n        </Card>\r\n           \r\n        \r\n    )\r\n}\r\nexport default Header;","import React from'react';\r\nimport { ListGroup} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\"; \r\n\r\nfunction Menu(){\r\n    return(\r\n        <ListGroup>\r\n              <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/\" action>Home</Link>\r\n             \r\n              <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/covid-status\" action>Covid19</Link>\r\n\r\n               <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/add-courses\" action>Instagram login</Link> \r\n              <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"all-courses\" action>Instagram profile</Link>\r\n              <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/contact\" action>Contact</Link>\r\n              <Link className=\"list-group-item list-group-item-action\" tag=\"a\" to=\"/about\" action>About us</Link>\r\n          \r\n        </ListGroup>\r\n    )\r\n}\r\nexport default Menu;","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faPhone, faPhoneAlt, faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport Footer from'./Footer'\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container text-center py-5\">\r\n                <h1>let get in touch</h1>\r\n\r\n<i className=\"contact\"><FontAwesomeIcon icon={faPhoneAlt}  className=\"text-warning\" /> </i>\r\n<FontAwesomeIcon icon={faCoffee} className=\"text-dark\"/>\r\n<i className=\"contact\"><FontAwesomeIcon icon={faHeart}  color=\"red\" /> </i>\r\n<br/><br/>\r\n<p>+917001101529</p>\r\n<p>alekh5007@gmail.com</p>\r\n<Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Container, Col } from 'reactstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from './Footer'\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <p><a href={'https://www.instagram.com/alekhroy007/'} target=\"_blank\">Instagram</a></p>\r\n                        <p><a href={'https://mail.google.com/mail/u/2/#inbox?compose=GTvVlcSGLPwVQSwtwPsZHtpKLMFhjjPdtHjTSVhwTmrNvvqJsrDnFrPpqzRNjDjqkJBZLNKDXHLjv'} target=\"_blank\">Gmail</a></p>\r\n                        <p><a href={'https://twitter.com/Alekhroy1'} target=\"_blank\">Twitter</a></p>\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <p><a href={'https://www.facebook.com/alekh.roy.1'} target=\"_blank\">Facebook</a></p>\r\n                        <p><a href={'https://www.linkedin.com/in/alekh-kumar-3a895175/'} target=\"_blank\">Linkdin</a></p>\r\n                        <p><a href={'https://api.whatsapp.com/send?phone=917001101529'} target=\"_blank\">Whatsapp</a></p>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Footer />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Covidcase from './Covidcase'\r\nimport { Table, Container } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport Footer from'./Footer'\r\nexport default function Covid() {\r\n    const [cdata, setCdata] = useState([])\r\n\r\n    const callallapidata = () => {\r\n\r\n        axios.get('https://api.covid19api.com/summary').then(\r\n            (response) => {\r\n                //console.log(response.data.Countries);\r\n                toast.success(\"sucess\");\r\n                //setCourses(response.data.graphql.user.edge_owner_to_timeline_media.edges);\r\n                setCdata(response.data.Countries);\r\n            },\r\n\r\n            (error) => {\r\n                //console.log(error)\r\n                toast.warning(\"something went wrong\");\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        callallapidata();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"text-center\">Covid Cases</h1>\r\n            {\r\n                cdata ?\r\n                <div>\r\n                    <Table dark>\r\n                        <thead>\r\n                            <tr>\r\n                                \r\n                                <th>Country</th>\r\n                                <th>TotalConfirmed</th>\r\n                                <th>TotalRecovered</th>\r\n                                <th>TotalDeaths</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                cdata.map((item, i) =>\r\n\r\n                                    <tr>\r\n                                       \r\n                                        <td>{item.Country}</td>\r\n                                        <td>{item.TotalConfirmed}</td>\r\n                                        <td>{item.TotalRecovered}</td>\r\n                                        <td>{item.TotalDeaths}</td>\r\n                                    </tr>\r\n                                )\r\n\r\n                            }\r\n                            </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        : \"no data available\"\r\n                       \r\n        \r\n        } \r\n        <Footer/>\r\n        </Container>\r\n             /* //  cdata.map((item)=><Covidcase cases={item}/>):\"no cases are available\"\r\n          // cdata?<Course course={courses}/>:\"no courses are available\" */\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Covid extends React.Component {\r\n//     constructor() {\r\n//       super();\r\n//       this.state = {\r\n//         data: []\r\n//       }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//       fetch(\"https://blockchain.info/ticker\").\r\n//         then(response => response.json()).\r\n//         then(findresponse => {\r\n//           this.setState({\r\n//             data: [findresponse]\r\n//           });\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//           {\r\n//             this.state.data.map((dynamicData, Key) => {\r\n//               let keys = Object.keys(dynamicData);\r\n//               let d = dynamicData;\r\n//               return keys.map(data => {\r\n//                 return (\r\n//                   <div style={{borderBottom: '1px solid black'}}>\r\n//                     <p>Currency: {data}</p>\r\n//                     <p>Buy: {dynamicData[data].buy}</p>\r\n//                   </div>\r\n//                 );\r\n//               });\r\n//             })\r\n            \r\n//           }\r\n//         </div>\r\n//       )\r\n//     }\r\n//   }\r\n\r\n//   export default Covid;","import React from 'react';\n\nimport './App.css';\nimport {Button, Row, Container, Col} from 'reactstrap';\nimport { ToastContainer,toast }from'react-toastify';\nimport Home from'./component/Home'\nimport Course from'./component/Course'\nimport Insta from'./component/Insta'\nimport Allcourses from'./component/Allcourses'\nimport AddCourses from'./component/AddCourses'\nimport Header from './component/Header'\nimport Menu from './component/Menu'\nimport Contact from'./component/Contact'\nimport About from'./component/About'\nimport Covid from'./component/Covid'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const notify = () => toast.warning(\"Wow so easy !\");\n  \n  return (\n    <div>\n  <Router>\n    <ToastContainer/>\n        <Container>\n             <Header/>\n           <Row>\n            <Col md={4}>\n<Menu/>\n      </Col>\n\n      <Col md={8}>\n      <Route path=\"/\" component={Home} exact /> \n    \n      <Route path=\"/add-courses\" component={AddCourses }exact />\n      <Route path=\"/contact\" component={Contact }exact />\n      <Route path=\"/about\" component={About }exact />\n      </Col>\n    </Row>\n    <Route path=\"/all-courses\"  exact >\n      <Allcourses name=\"alekhroy007\"/>\n    </Route>\n    <Route path=\"/covid-status\" component={Covid } exact />\n  </Container>\n \n  </Router>\n\n   </div>\n  );  \n}    \n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}